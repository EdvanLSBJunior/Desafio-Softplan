version: "3.9"

services:
  frontend:
    build:
      context: ../softplangestaoambiental-front
      dockerfile: Dockerfile
    container_name: frontend
    restart: on-failure
    ports:
      - "3000:3000"
    networks:
      - default

  api01: &api
    build:
      context: .
      dockerfile: Dockerfile
    hostname: api01
    platform: linux/amd64
    restart: on-failure
    environment:
      - DB_HOSTNAME=postgres
      - PORT=8080
      - JVM_XMS=110m
      - JVM_XMX=110m
      - CONTAINER_MEMORY=234m
      - NEW_SIZE=5m
      - MAX_NEW_SIZE=5m
      - MIN_HEAP_FREE_RATIO=30
      - MAX_HEAP_FREE_RATIO=70
      - MIN_POOL_CONNECTION=2
      - MAX_POOL_CONNECTION=4
      - LOG_LEVEL=INFO
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    deploy:
      resources:
        limits:
          cpus: "0.6"
          memory: "234MB"

  api02:
    <<: *api
    hostname: api02
    environment:
      - DB_HOSTNAME=postgres
      - PORT=8080
      - JVM_XMS=110m
      - JVM_XMX=110m
      - CONTAINER_MEMORY=234m
      - NEW_SIZE=5m
      - MAX_NEW_SIZE=5m
      - MIN_HEAP_FREE_RATIO=30
      - MAX_HEAP_FREE_RATIO=70
      - MIN_POOL_CONNECTION=2
      - MAX_POOL_CONNECTION=4
      - LOG_LEVEL=INFO
    ports:
      - "8082:8080"
    networks:
      - default

  nginx:
    image: nginx:1.15.0-alpine
    restart: on-failure
    container_name: loadbalancer
    platform: linux/amd64
    depends_on:
      - api01
      - api02
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16MB"
    networks:
      - default

  postgres:
    image:  postgres:latest
    command: postgres -c checkpoint_timeout=600 -c max_wal_size=2096 -c synchronous_commit=0 -c full_page_writes=0 -c fsync=off -c check_function_bodies=false
    container_name: postgres
    hostname: postgres
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '66MB'
    ports:
      - "5433:5432"
    volumes:
      - ./conf/postgres.conf:/etc/postgresql/postgresql.conf:z
      - ./data/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d app -U admin"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 20s
    environment:
      - POSTGRES_PASSWORD=123
      - POSTGRES_USER=admin
      - POSTGRES_DB=app
    networks:
      - default

networks:
  default:
    driver: bridge